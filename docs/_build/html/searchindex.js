Search.setIndex({"docnames": ["index", "modules", "ts_semantic_feature_detector", "ts_semantic_feature_detector.features_2d", "ts_semantic_feature_detector.features_3d", "ts_semantic_feature_detector.input_utils", "ts_semantic_feature_detector.input_utils.extractor", "ts_semantic_feature_detector.input_utils.loaders", "ts_semantic_feature_detector.output_utils", "ts_semantic_feature_detector.perfomance", "ts_semantic_feature_detector.perfomance.visualization", "ts_semantic_feature_detector.segmentation_model", "ts_semantic_feature_detector.segmentation_model.model", "ts_semantic_feature_detector.segmentation_model.model.detection", "ts_semantic_feature_detector.segmentation_model.ts_dataset", "ts_semantic_feature_detector.segmentation_model.visualization", "ts_semantic_feature_detector.visualization"], "filenames": ["index.rst", "modules.rst", "ts_semantic_feature_detector.rst", "ts_semantic_feature_detector.features_2d.rst", "ts_semantic_feature_detector.features_3d.rst", "ts_semantic_feature_detector.input_utils.rst", "ts_semantic_feature_detector.input_utils.extractor.rst", "ts_semantic_feature_detector.input_utils.loaders.rst", "ts_semantic_feature_detector.output_utils.rst", "ts_semantic_feature_detector.perfomance.rst", "ts_semantic_feature_detector.perfomance.visualization.rst", "ts_semantic_feature_detector.segmentation_model.rst", "ts_semantic_feature_detector.segmentation_model.model.rst", "ts_semantic_feature_detector.segmentation_model.model.detection.rst", "ts_semantic_feature_detector.segmentation_model.ts_dataset.rst", "ts_semantic_feature_detector.segmentation_model.visualization.rst", "ts_semantic_feature_detector.visualization.rst"], "titles": ["Welcome to ts_semantic_feature_detector\u2019s documentation!", "ts_semantic_feature_detector", "ts_semantic_feature_detector package", "ts_semantic_feature_detector.features_2d package", "ts_semantic_feature_detector.features_3d package", "ts_semantic_feature_detector.input_utils package", "ts_semantic_feature_detector.input_utils.extractor package", "ts_semantic_feature_detector.input_utils.loaders package", "ts_semantic_feature_detector.output_utils package", "ts_semantic_feature_detector.perfomance package", "ts_semantic_feature_detector.perfomance.visualization package", "ts_semantic_feature_detector.segmentation_model package", "ts_semantic_feature_detector.segmentation_model.model package", "ts_semantic_feature_detector.segmentation_model.model.detection package", "ts_semantic_feature_detector.segmentation_model.ts_dataset package", "ts_semantic_feature_detector.segmentation_model.visualization package", "ts_semantic_feature_detector.visualization package"], "terms": {"packag": [0, 1], "subpackag": [0, 1], "features_2d": [0, 1, 2, 4], "submodul": [0, 1, 2, 11], "box": [0, 1, 2, 4, 12, 13], "modul": [0, 1], "curv": [0, 1, 2, 16], "detect": [0, 1, 2, 4, 11, 12], "mask": [0, 1, 2, 4, 11, 12, 14, 16], "track": [0, 1, 2, 4, 13], "features_3d": [0, 1, 2, 3, 8], "camera": [0, 1, 2, 3, 5], "crop": [0, 1, 2, 3], "ground_plan": [0, 1, 2], "scene": [0, 1, 2, 3, 8], "sequenc": [0, 1, 2, 3], "input_util": [0, 1, 2], "extrins": [0, 1, 2, 3, 4], "output_util": [0, 1, 2], "writer": [0, 1, 2], "perfom": [0, 1, 2, 8], "timer": [0, 1, 2, 8], "segmentation_model": [0, 1, 2], "visual": [0, 1, 2, 3, 4, 9, 11], "color": [0, 1, 2, 3, 4], "visualizer_2d": [0, 1, 2], "visualizer_3d": [0, 1, 2], "content": 1, "data": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 16], "plot": [2, 3, 4, 9, 10, 16], "boxgroup": [2, 3], "score": [2, 3, 12], "curve2d": [2, 3], "x": [2, 3, 4, 5], "y": [2, 3, 4, 5], "line2d": [2, 3], "angular_coef": [2, 3], "linear_coef": [2, 3], "evaluate_line_at_x": [2, 3], "evaluate_line_at_i": [2, 3], "detectiongroup": [2, 3, 4], "filter_redund": [2, 3], "is_empti": [2, 3], "metric_filt": [2, 3], "binary_data": [2, 3], "binary_data_idx": [2, 3], "binary_threshold": [2, 3], "average_curv": [2, 3], "ransac_lin": [2, 3], "x_bottom": [2, 3], "_get_ransac_lin": [2, 3], "_get_average_curv": [2, 3], "extract_curv": [2, 3], "maskgroup": [2, 3, 16], "agriculturesort": [2, 3], "max_ag": [2, 3, 4], "min_hit": [2, 3], "iou_threshold": [2, 3], "tracker": [2, 3], "frame_count": [2, 3], "_associate_detections_to_track": [2, 3], "_iou_batch": [2, 3], "_linear_assign": [2, 3], "get_crops_mot": [2, 3], "step": [2, 3, 7, 9, 10], "kalmanboxtrack": [2, 3], "_convert_bbox_to_z": [2, 3], "_convert_x_to_bbox": [2, 3], "count": [2, 3], "get_stat": [2, 3], "predict": [2, 3, 12, 13], "updat": [2, 3, 4, 12, 13], "stereocamera": [2, 3, 4], "intrinsics_matrix": [2, 4], "intrinsics_matrix_inv": [2, 4], "size": [2, 3, 4, 7, 12, 13], "get_2d_point": [2, 4], "get_3d_point": [2, 4], "load_imag": [2, 4], "corncrop": [2, 3, 4], "crop_mask": [2, 4], "crop_box": [2, 4], "ps_3d": [2, 4], "average_point": [2, 4], "crop_vector": [2, 4], "crop_vector_angl": [2, 4], "emerging_point": [2, 4], "filter_data": [2, 4], "estimated_motion_2d": [2, 4], "cluster": [2, 4, 16], "_filter_crop_depth": [2, 4], "_get_principal_compon": [2, 4], "_get_vector_angl": [2, 4], "find_emerging_point": [2, 4], "plot_depth_histogram": [2, 4], "corncropgroup": [2, 4], "groundplan": [2, 4], "rgb_img": [2, 4, 5, 7, 16], "hsv_img": [2, 4], "binary_mask": [2, 4], "ground_vector": [2, 4], "normal_vector": [2, 4], "coefici": [2, 3, 4], "_get_plane_coeffici": [2, 4], "_parameter_trackbars_callback": [2, 4], "evaluate_at_determined_x_z": [2, 4], "get_ngrdi_mask": [2, 4], "get_threshold_gaussian_mask": [2, 4], "tune_values_tool": [2, 4], "agriculturalscen": [2, 4, 8], "crop_group": [2, 4], "ag": [2, 4], "_apply_extrinsics_to_3d_vector": [2, 4], "add_extrinsics_inform": [2, 4], "get_transformation_matrix": [2, 4], "agriculturalsequ": [2, 3, 4], "add_scen": [2, 4], "cluster_crop": [2, 4], "remove_old_scen": [2, 4], "extractor": [2, 5], "loader": [2, 5, 14], "rosbag": [2, 5, 6], "svo_z": [2, 5], "sync_load": [2, 5], "get_extrins": [2, 5], "outputwrit": [2, 8], "odom_fil": [2, 8], "points_fil": [2, 8], "separ": [2, 8, 16], "write_emerging_point": [2, 8], "write_odometry_factor": [2, 8], "write_tim": [2, 8], "log": [2, 9, 11, 12], "measur": [2, 8, 9, 12], "start_tim": [2, 9], "end_tim": [2, 9], "start": [2, 7, 9, 13], "stop": [2, 6, 9, 12], "model": [2, 3, 4, 11, 15], "mask_rcnn_stem_segment": [2, 11], "ts_dataset": [2, 11, 12], "ts_load_dataset": [2, 11, 12], "get_color_from_clust": [2, 16], "visualizer2d": [2, 16], "plot_mask_group": [2, 16], "show": [2, 4, 16], "visualizer3d": [2, 16], "implement": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "basic": [3, 16], "oper": [3, 4], "bound": [3, 12, 13], "It": [3, 4, 5, 6, 7, 12, 13], "i": [3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16], "usefeul": 3, "result": [3, 12, 13], "rcnn": [3, 11, 12], "network": [3, 12], "have": [3, 4, 13], "class": [3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "represent": 3, "same": [3, 12, 13, 16], "wai": 3, "_supportsarrai": [3, 4, 7, 12, 16], "dtype": [3, 4, 7, 12, 13, 16], "_nestedsequ": [3, 4, 7, 12, 16], "bool": [3, 4, 7, 12, 13, 16], "int": [3, 4, 7, 8, 12, 13, 14, 16], "float": [3, 4, 7, 12, 13, 16], "complex": [3, 4, 7, 12, 16], "str": [3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "byte": [3, 4, 7, 12, 16], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "base": [3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "object": [3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "contain": [3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "singl": [3, 4], "method": [3, 4, 12, 13, 14, 15], "process": [3, 12, 13], "shape": 3, "1": [3, 4, 12, 13, 16], "4": [3, 12, 13], "type": [3, 4, 7, 8, 9, 12, 13, 14, 15, 16], "np": [3, 4, 6, 7], "ndarrai": [3, 4, 6, 7], "initi": [3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "ax": [3, 4], "linewidth": 3, "3": [3, 4, 13], "0": [3, 4, 7, 12, 13, 16], "none": [3, 4, 6, 8, 12, 13, 14, 16], "us": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16], "matplotlib": [3, 16], "librari": [3, 4, 16], "pyplot": [3, 16], "subplot": 3, "where": [3, 4, 6, 7, 12], "": [3, 4, 7], "desir": [3, 4, 6, 7, 12, 13], "insert": [3, 12], "hexadecim": [3, 16], "option": [3, 4, 8, 16], "line": [3, 4, 7, 12, 16], "width": [3, 4, 13, 14], "agroup": 3, "do": [3, 4, 12, 13], "filter": [3, 4, 12], "The": [3, 4, 9, 12, 13, 14, 16], "resutl": 3, "from": [3, 4, 5, 6, 7, 8, 12, 13, 14, 16], "For": [3, 4, 12], "more": [3, 4, 12, 16], "inform": [3, 4, 5, 12, 16], "see": [3, 4, 16], "list": [3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], "infer": [3, 11, 12], "group": [3, 4, 13, 16], "num_box": 3, "thi": [3, 4, 6, 7, 12, 13, 14], "format": [3, 7, 12, 13, 16], "output": [3, 8, 12], "2d": [3, 4, 16], "ar": [3, 4, 5, 6, 7, 12, 14, 15, 16], "redund": 3, "abstract": [3, 4, 16], "store": 3, "xy": [3, 4], "point": [3, 4, 8], "make": [3, 4, 12], "easier": 3, "valu": [3, 4, 5, 9, 12, 13, 15], "matplolib": [3, 16], "document": [3, 4, 12, 15, 16], "detail": [3, 16], "inherit": 3, "refer": [3, 4, 15], "angular": 3, "linear": 3, "evalu": [3, 4, 12, 13], "specif": [3, 16], "calcul": [3, 4, 12, 14], "express": 3, "m": 3, "b": [3, 4, 13], "coordin": [3, 4, 5], "return": [3, 4, 5, 6, 7, 12, 13, 14, 15, 16], "x_valu": 3, "y_valu": 3, "coeffici": [3, 4], "If": [3, 4, 12, 13, 14, 16], "specifi": [3, 4, 12, 13, 16], "attribut": [3, 12], "encapsul": [3, 4, 12], "function": [3, 4, 6, 7, 8, 12, 13], "deal": 3, "featur": [3, 4], "imag": [3, 4, 6, 7, 11, 12, 13, 14, 16], "onli": [3, 4, 12, 13, 14], "necessari": [3, 12], "appli": [3, 4, 12, 14], "simultan": 3, "stem": [3, 4, 12], "num_mask": 3, "color_channel": 3, "height": [3, 4, 13, 14], "provid": [3, 4, 12, 13, 14], "must": [3, 4, 12, 13], "correspond": [3, 6], "order": [3, 4, 13, 15], "threshold": [3, 4], "binar": 3, "binari": [3, 4], "extens": 3, "project": [3, 4, 6, 12], "so": [3, 13], "argument": [3, 14], "mandatori": 3, "x_coordinate_threshold": 3, "repres": [3, 4, 12, 14, 15], "follow": [3, 13], "find": [3, 4, 7], "appropri": 3, "describ": [3, 4, 13], "each": [3, 4, 7, 9, 10, 12, 13, 15, 16], "about": [3, 4, 12], "how": [3, 4, 12, 14], "obtain": [3, 4], "pleas": [3, 4], "features2d": [3, 16], "2": [3, 4, 12, 13], "intercept": [3, 4], "bottom": [3, 4], "part": 3, "distanc": [3, 4], "between": [3, 4, 12], "consecut": 3, "too": 3, "close": [3, 13], "merg": [3, 12, 13], "again": 3, "todo": [3, 4, 12, 14, 15, 16], "throw": 3, "an": [3, 6, 13], "except": 3, "when": [3, 6, 12, 13, 14], "check": [3, 7, 16], "empti": [3, 4], "true": [3, 13], "fals": [3, 4, 12, 16], "otherwis": 3, "score_threshold": 3, "5": [3, 13], "percentag": [3, 12], "some": [3, 4, 7, 12, 15], "metric": [3, 4, 12, 15], "discard": 3, "consid": [3, 4], "worst": 3, "can": [3, 4, 6, 12, 16], "first": [3, 4, 5, 7], "one": [3, 4, 12, 13, 14], "arbitrari": [3, 5, 13], "second": [3, 4, 7], "remain": [3, 12], "best": [3, 12], "interv": [3, 13], "below": 3, "delet": 3, "determin": 3, "all": [3, 4, 6, 7, 12, 13, 14], "relat": [3, 4], "weight": [3, 4, 11, 12, 13], "indic": [3, 4, 12, 13, 16], "posit": [3, 4, 5, 7, 12], "middl": 3, "portion": [3, 12], "fit": [3, 4], "ransac": [3, 16], "last": [3, 4, 12], "row": 3, "averag": [3, 4, 12, 13, 15, 16], "binary_data_indx": 3, "get": [3, 4, 5, 6, 7], "uniqu": 3, "avg_curv": 3, "extract": [3, 5, 6, 7], "posterior": 3, "storag": [3, 6, 7], "algorithm": [3, 8], "two": [3, 4], "whose": 3, "also": [3, 5, 7, 12, 13], "through": [3, 4, 12], "alpha": [3, 16], "transpar": [3, 16], "amount": [3, 4, 7, 12, 16], "compar": 3, "differ": [3, 16], "corn": [3, 4], "sort": [3, 7, 14], "simpl": [3, 13], "onlin": 3, "realtim": 3, "multipl": 3, "video": 3, "work": 3, "modifi": 3, "A": [3, 4, 14], "stereo": [3, 4], "3d": [3, 4, 16], "back": [3, 16], "plane": [3, 4], "maximum": [3, 4, 12], "number": [3, 4, 12, 14, 16], "frame": [3, 4, 5, 7], "keep": 3, "aliv": 3, "without": 3, "associ": 3, "minimum": [3, 12], "befor": [3, 4, 12], "initialis": 3, "iou": 3, "match": 3, "agriculturetrack": 3, "current": 3, "trackers_data": 3, "tupl": [3, 4, 5, 6, 7, 12, 13, 14, 16], "exist": [3, 6, 12, 16], "unmatched_detect": 3, "unmatch": 3, "bb_test": 3, "bb_gt": 3, "comput": [3, 4, 13], "form": 3, "x1": 3, "y1": 3, "x2": 3, "y2": 3, "iou_valu": 3, "pair": 3, "cost_matrix": 3, "column": [3, 7], "dure": [3, 12], "sever": [3, 4, 15], "execut": [3, 6], "agricultur": [3, 4], "tracked_bbox": 3, "kalman": 3, "state": [3, 13], "action": 3, "vector": [3, 4], "bbox": 3, "convert": [3, 4], "r": [3, 12], "segment": [3, 12, 13, 15], "top": 3, "left": 3, "right": 3, "center": 3, "area": 3, "ratio": 3, "converted_data": 3, "boud": 3, "static": 3, "give": 3, "id": [3, 8, 13], "estim": [3, 4], "motion_2d_offset": 3, "motion": [3, 4], "offset": 3, "correct": [3, 4], "intrins": 4, "properti": [4, 13], "instrins": 4, "matrix": 4, "fx": 4, "fy": 4, "cx": 4, "cy": 4, "invers": 4, "intrinsec": 4, "four": [4, 5], "p_3d": 4, "equat": 4, "p_2d": 4, "z": [4, 5], "k": [4, 13], "homogenen": 4, "depth": [4, 7], "homogen": 4, "scalar": 4, "ignor": [4, 13, 14], "equival": 4, "assum": 4, "abov": 4, "w": [4, 5], "k_inv": 4, "image_path": 4, "load": [4, 7, 11, 12, 14, 15], "pil": [4, 12, 13, 16], "ha": [4, 5, 6, 7, 12], "purpos": 4, "avoid": 4, "explicit": 4, "main": 4, "program": 4, "path": [4, 6, 7, 8, 10, 12, 13, 14, 15], "depth_img": [4, 5, 7], "depth_neighbor": 4, "orient": [4, 5, 7], "theta": 4, "phi": 4, "angl": 4, "space": 4, "ground": 4, "histogram": 4, "bin": 4, "moment": 4, "construct": [4, 7, 12], "next": 4, "belong": 4, "clean": 4, "img": [4, 13], "whole": 4, "accept": 4, "neighbor": 4, "most": 4, "frequent": 4, "masked_depth": 4, "size_bin": 4, "500": 4, "occur": 4, "approach": 4, "take": [4, 13], "its": [4, 13], "clip": 4, "upper": [4, 6, 7], "mani": [4, 14], "filtered_depth": 4, "histogram_valu": 4, "histogram_bin": 4, "data_3d": 4, "princip": 4, "compon": [4, 5], "main_compon": 4, "axi": 4, "respect": [4, 7, 12, 14], "emerg": [4, 8], "data_plot": 4, "plot_3d_point": 4, "line_scalar": 4, "plot_emerging_point": 4, "cluster_blacklist": 4, "plotli": [4, 16], "previou": 4, "creat": [4, 6, 12, 14], "append": 4, "pointcloud": 4, "need": [4, 6, 7, 12, 13, 15], "rgb": [4, 7, 12, 14, 16], "detection_group": 4, "mask_group": [4, 16], "finding_ground_method": 4, "threshold_valu": 4, "dict": [4, 6, 7, 9, 12, 13], "hsv": 4, "normal": 4, "cz": 4, "d": [4, 13], "add": [4, 6, 12], "dictionari": [4, 12, 13, 15], "refactor": 4, "share": [4, 13], "possibl": [4, 13], "threshold_gaussian": 4, "gaussian": 4, "ngrdi": 4, "veget": 4, "index": 4, "choosen": 4, "default": [4, 12, 13], "coef": 4, "c": 4, "name": [4, 6, 7, 9, 13, 14], "val": 4, "callback": [4, 6], "tune": 4, "pixel": 4, "plot_plan_scalar": 4, "boolean": [4, 12], "numpi": [4, 7, 12, 15], "arrai": [4, 7, 12, 15], "plan": 4, "tool": 4, "opencv": 4, "open": 4, "trackbar": 4, "constructor": [4, 12], "call": [4, 13, 14], "remov": [4, 6, 12], "old": 4, "vector_3d": 4, "transform": [4, 5, 11, 12, 14], "global": [4, 13], "euclidian_vector": 4, "euclidian": 4, "pos_world_bodi": [4, 5], "orient_world_bodi": [4, 5], "pos_camera_bodi": [4, 5], "orient_camera_bodi": [4, 5], "done": 4, "after": [4, 13], "ad": 4, "spare": 4, "power": 4, "three": [4, 5, 12], "translat": 4, "world": [4, 5], "bodi": [4, 5], "quaternion": [4, 5], "rotat": 4, "transformation_matrix": 4, "plane_scalar": 4, "plot_3d_points_crop": 4, "plot_3d_points_plan": 4, "obj": 4, "time": [4, 5, 6, 7, 8, 9, 10], "initialz": 4, "ep": 4, "05": [4, 13], "min_sampl": 4, "unsupervis": 4, "try": 4, "approxim": 4, "save": [4, 6, 9, 12], "seen": 4, "sampl": [4, 13], "neighborhood": 4, "other": [4, 5, 7, 11], "total": 4, "core": 4, "includ": 4, "itself": 4, "crop_label": 4, "label": [4, 14], "analys": 4, "cluster_threshold": 4, "print": [4, 13], "200": 4, "dataextractor": [5, 6], "_create_folder_if_need": [5, 6], "_get_svo_subscrib": [5, 6], "_get_topics_nam": [5, 6], "_svo_img_cb": [5, 6], "_write_rosbag_raw_data": [5, 6], "_write_svo_raw_data": [5, 6], "rosbagload": [5, 7], "ekf": [5, 7], "ekf_tim": [5, 7], "imu": [5, 7], "imu_tim": [5, 7], "_get_csv_and_tim": [5, 7], "svozedload": [5, 7], "rgb_time": [5, 7], "depth_tim": [5, 7], "_get_image_set_tim": [5, 7], "synchronizedload": [5, 7], "data_path": [5, 6, 7], "low_freq_top": [5, 7], "_get_low_freq_top": [5, 7], "get_sync_data": [5, 7], "arbirari": 5, "ob": 5, "being": 5, "now": 5, "expect": [5, 6, 7], "svo": [6, 7], "rosbag_fil": 6, "svo_fil": 6, "custom": [6, 11, 12, 14], "intend": 6, "gener": [6, 7, 15], "pre": [6, 11, 12], "defin": [6, 13], "topic": [6, 7], "folder": [6, 7, 12, 14], "compress": [6, 7], "arrang": [6, 7], "similar": [6, 7], "bag": 6, "file": [6, 7, 8, 10, 12, 14, 15], "doe": [6, 13], "yet": 6, "fixm": 6, "permiss": 6, "problem": 6, "ro": 6, "subscrib": 6, "chang": [6, 12], "manual": 6, "publish": 6, "code": 6, "rosbag_top": 6, "svo_top": 6, "msg": 6, "messag": 6, "png": [6, 7, 14], "stamp": 6, "sensor_msg": 6, "write": [6, 8, 12], "roslaunchpar": 6, "roslaunch": 6, "parent": 6, "node": 6, "decompress": 7, "timestamp": 7, "entri": 7, "csv": 7, "csv_path": 7, "nanosecond": 7, "descript": [7, 12], "skip": 7, "image_filenam": 7, "filenam": 7, "sec": 7, "_n": 7, "nsec": 7, "synchron": [7, 13], "still": 7, "least": 7, "low": 7, "frequenc": 7, "skip_fram": 7, "yield": [7, 13], "odometry_fil": 8, "times_fil": [8, 10], "compil": 8, "percept": 8, "odometri": 8, "scene_id": 8, "ekf_data": 8, "robot": 8, "pose": 8, "timervisu": [9, 10], "perform": [9, 12, 13], "pipelin": [9, 10], "kei": [9, 15], "end": 9, "given": 9, "string": [10, 12, 14, 15, 16], "coco_ev": [11, 12], "coco_util": [11, 12], "engin": [11, 12], "group_by_aspect_ratio": [11, 12], "preset": [11, 12], "train": [11, 12, 15], "util": [11, 12], "maskrcnnstemsegmentationmodel": [11, 12], "hyperparam": [11, 12], "dataset": [11, 12, 13, 14], "optim": [11, 12, 13], "lr_schedul": [11, 12], "train_log": [11, 12], "validation_log": [11, 12], "last_best_map": [11, 12], "start_epoch": [11, 12], "train_dataset_idx": [11, 12], "validation_dataset_idx": [11, 12], "_divide_dataset": [11, 12], "_get_model": [11, 12], "_get_transform": [11, 12], "_log_to_fil": [11, 12], "terrasentiadataset": [11, 12, 14], "png_path": [11, 14], "mask_path": [11, 14], "png_img": [11, 14], "mask_img": [11, 14], "num_imb": [11, 14], "image_s": [11, 14], "mean": [11, 12, 14, 15], "std_dev": [11, 14], "_get_metr": [11, 14], "metricsvisu": [11, 15], "train_metr": [11, 15], "validation_metr": [11, 15], "_load_train_log": [11, 15], "_load_validation_log": [11, 15], "plot_learning_r": [11, 15], "plot_testing_metr": [11, 15], "plot_testing_metrics_compar": [11, 15], "plot_training_loss_and_lr": [11, 15], "plot_training_loss_metrics_separ": [11, 15], "plot_training_loss_metrics_togeth": [11, 15], "architectur": 11, "pytorch": [11, 12, 14], "framework": [11, 12, 14], "terrasentia": [11, 14], "coco": 11, "readi": 11, "capabl": 11, "mask_rcnn_model": 11, "cocoevalu": [12, 13], "accumul": [12, 13], "prepar": [12, 13], "prepare_for_coco_detect": [12, 13], "prepare_for_coco_keypoint": [12, 13], "prepare_for_coco_segment": [12, 13], "summar": [12, 13], "synchronize_between_process": [12, 13], "convert_to_xywh": [12, 13], "create_common_coco_ev": [12, 13], "cocodetect": [12, 13], "convertcocopolystomask": [12, 13], "filterandremapcococategori": [12, 13], "convert_coco_poly_to_mask": [12, 13], "convert_to_coco_api": [12, 13], "get_coco": [12, 13], "get_coco_api_from_dataset": [12, 13], "get_coco_kp": [12, 13], "train_one_epoch": [12, 13], "groupedbatchsampl": [12, 13], "compute_aspect_ratio": [12, 13], "create_aspect_ratio_group": [12, 13], "compos": [12, 13], "convertimagedtyp": [12, 13], "forward": [12, 13], "fixedsizecrop": [12, 13], "piltotensor": [12, 13], "randomhorizontalflip": [12, 13], "randomioucrop": [12, 13], "randomphotometricdistort": [12, 13], "randomshortests": [12, 13], "randomzoomout": [12, 13], "scalejitt": [12, 13], "simplecopypast": [12, 13], "metriclogg": [12, 13], "add_met": [12, 13], "log_everi": [12, 13], "smoothedvalu": [12, 13], "avg": [12, 13], "global_avg": [12, 13], "max": [12, 13], "median": [12, 13], "all_gath": [12, 13], "collate_fn": [12, 13], "get_rank": [12, 13], "get_world_s": [12, 13], "init_distributed_mod": [12, 13], "is_dist_avail_and_initi": [12, 13], "is_main_process": [12, 13], "mkdir": [12, 13], "reduce_dict": [12, 13], "save_on_mast": [12, 13], "setup_for_distribut": [12, 13], "input_min_s": 12, "input_max_s": 12, "ani": [12, 13, 14], "model_path": 12, "kwarg": [12, 13], "improv": 12, "cnn": 12, "resnet": 12, "50": 12, "fpn": 12, "backbon": 12, "benchmark": 12, "transfer": 12, "learn": 12, "vision": 12, "http": [12, 15], "arxiv": 12, "org": 12, "ab": 12, "2111": 12, "11429": 12, "paper": [12, 13], "version": 12, "torch": [12, 14], "13": 12, "torchvis": [12, 13], "14": 12, "adapt": 12, "case": 12, "we": 12, "interest": 12, "allow": 12, "easi": 12, "requir": 12, "anoth": [12, 13], "structur": 12, "explan": 12, "routin": 12, "privat": 12, "hyperparamet": 12, "found": 12, "origin": [12, 13], "standard": [12, 14], "deviat": [12, 14], "task": 12, "mask_rcnn": 12, "maskrcnn": 12, "sgd": 12, "lr": 12, "schedul": 12, "valid": [12, 15], "precis": [12, 15], "well": 12, "set": [12, 13], "epoch": [12, 13, 15], "modif": 12, "essenti": 12, "resiz": [12, 13], "depend": 12, "user": 12, "want": 12, "rate": 12, "005": 12, "momentum": 12, "9": 12, "weight_decai": 12, "decai": 12, "0005": 12, "step_siz": 12, "30": 12, "gamma": 12, "checkpoint_epoch": 12, "safeti": 12, "20": [12, 13], "checkpoint_map_threshold": 12, "map": [12, 15], "new": 12, "01": 12, "train_percentag": 12, "divid": 12, "subset": 12, "respectivali": 12, "both": [12, 13], "num_class": 12, "steplr": 12, "look": 12, "should": [12, 13], "background": 12, "pass": [12, 13], "dump": 12, "json": [12, 15], "everi": [12, 13], "inference_img": 12, "inference_img_path": 12, "conveni": 12, "therefor": 12, "inaccess": 12, "incorpor": 12, "instanc": [12, 13], "training_batch_s": 12, "validation_batch_s": 12, "num_epoch": 12, "log_path": 12, "num_work": 12, "batch": [12, 13], "written": 12, "deactiv": 12, "sub": 12, "coco_gt": 13, "iou_typ": 13, "img_id": 13, "eval_img": 13, "img_fold": 13, "ann_fil": 13, "categori": 13, "remap": 13, "root": 13, "image_set": 13, "mode": 13, "data_load": 13, "devic": 13, "print_freq": 13, "scaler": 13, "sampler": 13, "group_id": 13, "batch_siz": 13, "batchsampl": 13, "wrap": 13, "mini": 13, "enforc": 13, "element": 13, "tri": 13, "which": 13, "param": 13, "produc": 13, "rang": 13, "n": 13, "continu": 13, "integ": [13, 14], "e": 13, "thei": 13, "num_group": 13, "intern": 13, "nn": 13, "scriptmodul": 13, "tensor": [13, 14], "target": 13, "overridden": 13, "subclass": 13, "although": 13, "recip": 13, "within": 13, "afterward": 13, "instead": 13, "sinc": 13, "former": 13, "care": 13, "run": 13, "regist": 13, "hook": 13, "while": 13, "latter": 13, "silent": 13, "them": 13, "fill": 13, "padding_mod": 13, "constant": 13, "p": 13, "flip": 13, "randomli": 13, "min_scal": 13, "max_scal": 13, "min_aspect_ratio": 13, "max_aspect_ratio": 13, "sampler_opt": 13, "trial": 13, "40": 13, "contrast": 13, "satur": 13, "hue": 13, "bright": 13, "875": 13, "125": 13, "min_siz": 13, "max_siz": 13, "interpol": 13, "interpolationmod": 13, "bilinear": 13, "side_rang": 13, "target_s": 13, "scale_rang": 13, "scale": 13, "jitter": 13, "augment": 13, "copi": 13, "past": 13, "strong": 13, "factor": 13, "g": 13, "enum": 13, "blend": 13, "resize_interpol": 13, "delimit": 13, "t": 13, "meter": 13, "iter": 13, "header": 13, "window_s": 13, "fmt": 13, "seri": 13, "access": 13, "smooth": 13, "over": 13, "window": [13, 16], "warn": 13, "dequ": 13, "picklabl": 13, "necessarili": 13, "gather": 13, "rank": 13, "arg": 13, "input_dict": 13, "reduc": 13, "whether": 13, "sum": 13, "field": 13, "reduct": 13, "is_mast": 13, "disabl": 13, "master": 13, "fix": 14, "hint": 14, "floattensor": 14, "lexicograph": 14, "accord": 14, "channel": 14, "train_log_path": 15, "validation_log_path": 15, "ap": 15, "towardsdatasci": 15, "com": 15, "might": 15, "confus": 15, "you": 15, "5956f1bfa9e2": 15, "read": 15, "wa": 15, "subplot_shap": 16, "opt_avg_curv": 16, "opt_ransac_lin": 16, "togeth": 16, "compat": 16, "distribut": 16, "figur": 16, "omit": 16, "show_maxim": 16, "previous": 16, "configur": 16, "maxim": 16, "usr": 16, "lib": 16, "python3": 16, "8": 16, "py": 16}, "objects": {"": [[2, 0, 0, "-", "ts_semantic_feature_detector"]], "ts_semantic_feature_detector": [[3, 0, 0, "-", "features_2d"], [4, 0, 0, "-", "features_3d"], [5, 0, 0, "-", "input_utils"], [8, 0, 0, "-", "output_utils"], [9, 0, 0, "-", "perfomance"], [11, 0, 0, "-", "segmentation_model"], [16, 0, 0, "-", "visualization"]], "ts_semantic_feature_detector.features_2d": [[3, 0, 0, "-", "boxes"], [3, 0, 0, "-", "curves"], [3, 0, 0, "-", "detections"], [3, 0, 0, "-", "masks"], [3, 0, 0, "-", "tracking"]], "ts_semantic_feature_detector.features_2d.boxes": [[3, 1, 1, "", "Box"], [3, 1, 1, "", "BoxGroup"]], "ts_semantic_feature_detector.features_2d.boxes.Box": [[3, 2, 1, "", "data"], [3, 3, 1, "", "plot"]], "ts_semantic_feature_detector.features_2d.boxes.BoxGroup": [[3, 2, 1, "", "data"], [3, 3, 1, "", "plot"], [3, 2, 1, "", "scores"]], "ts_semantic_feature_detector.features_2d.curves": [[3, 1, 1, "", "Curve2D"], [3, 1, 1, "", "Line2D"]], "ts_semantic_feature_detector.features_2d.curves.Curve2D": [[3, 3, 1, "", "plot"], [3, 2, 1, "", "x"], [3, 2, 1, "", "y"]], "ts_semantic_feature_detector.features_2d.curves.Line2D": [[3, 2, 1, "", "angular_coef"], [3, 3, 1, "", "evaluate_line_at_x"], [3, 3, 1, "", "evaluate_line_at_y"], [3, 2, 1, "", "linear_coef"], [3, 3, 1, "", "plot"]], "ts_semantic_feature_detector.features_2d.detections": [[3, 1, 1, "", "DetectionGroup"]], "ts_semantic_feature_detector.features_2d.detections.DetectionGroup": [[3, 2, 1, "", "boxes"], [3, 3, 1, "", "filter_redundancy"], [3, 3, 1, "", "is_empty"], [3, 2, 1, "", "masks"], [3, 3, 1, "", "metric_filtering"], [3, 2, 1, "", "scores"]], "ts_semantic_feature_detector.features_2d.masks": [[3, 1, 1, "", "Mask"], [3, 1, 1, "", "MaskGroup"]], "ts_semantic_feature_detector.features_2d.masks.Mask": [[3, 3, 1, "", "_get_RANSAC_line"], [3, 3, 1, "", "_get_average_curve"], [3, 2, 1, "", "average_curve"], [3, 2, 1, "", "binary_data"], [3, 2, 1, "", "binary_data_idxs"], [3, 2, 1, "", "binary_threshold"], [3, 2, 1, "", "data"], [3, 3, 1, "", "extract_curves"], [3, 3, 1, "", "plot"], [3, 2, 1, "", "ransac_line"], [3, 2, 1, "", "x_bottom"]], "ts_semantic_feature_detector.features_2d.masks.MaskGroup": [[3, 2, 1, "", "data"], [3, 3, 1, "", "extract_curves"], [3, 3, 1, "", "plot"]], "ts_semantic_feature_detector.features_2d.tracking": [[3, 1, 1, "", "AgricultureSort"], [3, 1, 1, "", "KalmanBoxTracker"]], "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort": [[3, 3, 1, "", "_associate_detections_to_trackers"], [3, 3, 1, "", "_iou_batch"], [3, 3, 1, "", "_linear_assignment"], [3, 2, 1, "", "camera"], [3, 2, 1, "", "frame_count"], [3, 3, 1, "", "get_crops_motion"], [3, 2, 1, "", "iou_threshold"], [3, 2, 1, "", "max_age"], [3, 2, 1, "", "min_hits"], [3, 3, 1, "", "step"], [3, 2, 1, "", "trackers"]], "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker": [[3, 3, 1, "", "_convert_bbox_to_z"], [3, 3, 1, "", "_convert_x_to_bbox"], [3, 2, 1, "", "count"], [3, 2, 1, "", "crops"], [3, 3, 1, "", "get_state"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "update"]], "ts_semantic_feature_detector.features_3d": [[4, 0, 0, "-", "camera"], [4, 0, 0, "-", "crop"], [4, 0, 0, "-", "ground_plane"], [4, 0, 0, "-", "scene"], [4, 0, 0, "-", "sequence"]], "ts_semantic_feature_detector.features_3d.camera": [[4, 1, 1, "", "StereoCamera"]], "ts_semantic_feature_detector.features_3d.camera.StereoCamera": [[4, 3, 1, "", "get_2d_point"], [4, 3, 1, "", "get_3d_point"], [4, 2, 1, "", "intrinsics_matrix"], [4, 2, 1, "", "intrinsics_matrix_inv"], [4, 3, 1, "", "load_image"], [4, 2, 1, "", "size"]], "ts_semantic_feature_detector.features_3d.crop": [[4, 1, 1, "", "CornCrop"], [4, 1, 1, "", "CornCropGroup"]], "ts_semantic_feature_detector.features_3d.crop.CornCrop": [[4, 3, 1, "", "_filter_crop_depth"], [4, 3, 1, "", "_get_principal_component"], [4, 3, 1, "", "_get_vector_angles"], [4, 2, 1, "", "average_point"], [4, 2, 1, "", "cluster"], [4, 2, 1, "", "crop_box"], [4, 2, 1, "", "crop_mask"], [4, 2, 1, "", "crop_vector"], [4, 2, 1, "", "crop_vector_angles"], [4, 2, 1, "", "emerging_point"], [4, 2, 1, "", "estimated_motion_2d"], [4, 2, 1, "", "filter_data"], [4, 3, 1, "", "find_emerging_point"], [4, 3, 1, "", "plot"], [4, 3, 1, "", "plot_depth_histogram"], [4, 2, 1, "", "ps_3d"]], "ts_semantic_feature_detector.features_3d.crop.CornCropGroup": [[4, 2, 1, "", "crops"], [4, 3, 1, "", "plot"], [4, 3, 1, "", "plot_depth_histograms"]], "ts_semantic_feature_detector.features_3d.ground_plane": [[4, 1, 1, "", "GroundPlane"]], "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane": [[4, 3, 1, "", "_get_plane_coefficients"], [4, 3, 1, "", "_get_principal_components"], [4, 3, 1, "", "_parameter_trackbars_callback"], [4, 2, 1, "", "binary_mask"], [4, 2, 1, "", "coeficients"], [4, 3, 1, "", "evaluate_at_determined_x_z"], [4, 3, 1, "", "get_ngrdi_mask"], [4, 3, 1, "", "get_threshold_gaussian_mask"], [4, 2, 1, "", "ground_vectors"], [4, 2, 1, "", "hsv_img"], [4, 2, 1, "", "normal_vector"], [4, 3, 1, "", "plot"], [4, 2, 1, "", "rgb_img"], [4, 3, 1, "", "tune_values_tool"]], "ts_semantic_feature_detector.features_3d.scene": [[4, 1, 1, "", "AgriculturalScene"]], "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene": [[4, 3, 1, "", "_apply_extrinsics_to_3D_vector"], [4, 3, 1, "", "add_extrinsics_information"], [4, 2, 1, "", "age"], [4, 2, 1, "", "crop_group"], [4, 2, 1, "", "extrinsics"], [4, 3, 1, "", "get_transformation_matrix"], [4, 2, 1, "", "ground_plane"], [4, 3, 1, "", "plot"]], "ts_semantic_feature_detector.features_3d.sequence": [[4, 1, 1, "", "AgriculturalSequence"]], "ts_semantic_feature_detector.features_3d.sequence.AgriculturalSequence": [[4, 3, 1, "", "add_scene"], [4, 3, 1, "", "cluster_crops"], [4, 3, 1, "", "plot"], [4, 3, 1, "", "remove_old_scenes"], [4, 2, 1, "", "scenes"]], "ts_semantic_feature_detector.input_utils": [[6, 0, 0, "-", "extractor"], [5, 0, 0, "-", "extrinsics"], [7, 0, 0, "-", "loaders"]], "ts_semantic_feature_detector.input_utils.extractor": [[6, 0, 0, "-", "extractor"]], "ts_semantic_feature_detector.input_utils.extractor.extractor": [[6, 1, 1, "", "DataExtractor"]], "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor": [[6, 3, 1, "", "_create_folder_if_needed"], [6, 3, 1, "", "_get_svo_subscribers"], [6, 3, 1, "", "_get_topics_names"], [6, 3, 1, "", "_svo_img_cb"], [6, 3, 1, "", "_write_rosbag_raw_data"], [6, 3, 1, "", "_write_svo_raw_data"]], "ts_semantic_feature_detector.input_utils.extrinsics": [[5, 4, 1, "", "get_extrinsics"]], "ts_semantic_feature_detector.input_utils.loaders": [[7, 0, 0, "-", "rosbags"], [7, 0, 0, "-", "svo_zed"], [7, 0, 0, "-", "sync_loader"]], "ts_semantic_feature_detector.input_utils.loaders.rosbags": [[7, 1, 1, "", "RosbagLoader"]], "ts_semantic_feature_detector.input_utils.loaders.rosbags.RosbagLoader": [[7, 3, 1, "", "_get_csv_and_times"], [7, 2, 1, "", "ekf"], [7, 2, 1, "", "ekf_times"], [7, 2, 1, "", "imu"], [7, 2, 1, "", "imu_times"]], "ts_semantic_feature_detector.input_utils.loaders.svo_zed": [[7, 1, 1, "", "SVOZedLoader"]], "ts_semantic_feature_detector.input_utils.loaders.svo_zed.SVOZedLoader": [[7, 3, 1, "", "_get_image_set_times"], [7, 2, 1, "", "depth_imgs"], [7, 2, 1, "", "depth_times"], [7, 2, 1, "", "rgb_imgs"], [7, 2, 1, "", "rgb_times"]], "ts_semantic_feature_detector.input_utils.loaders.sync_loader": [[7, 1, 1, "", "SynchronizedLoader"]], "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader": [[7, 3, 1, "", "_get_low_freq_topic"], [7, 2, 1, "", "data"], [7, 2, 1, "", "data_path"], [7, 3, 1, "", "get_sync_data"], [7, 2, 1, "", "low_freq_topic"], [7, 2, 1, "", "times"]], "ts_semantic_feature_detector.output_utils": [[8, 0, 0, "-", "writer"]], "ts_semantic_feature_detector.output_utils.writer": [[8, 1, 1, "", "OutputWriter"]], "ts_semantic_feature_detector.output_utils.writer.OutputWriter": [[8, 2, 1, "", "odom_file"], [8, 2, 1, "", "points_file"], [8, 2, 1, "", "separator"], [8, 3, 1, "", "write_emerging_points"], [8, 3, 1, "", "write_odometry_factors"], [8, 3, 1, "", "write_times"]], "ts_semantic_feature_detector.perfomance": [[9, 0, 0, "-", "timer"], [10, 0, 0, "-", "visualization"]], "ts_semantic_feature_detector.perfomance.timer": [[9, 1, 1, "", "Timer"]], "ts_semantic_feature_detector.perfomance.timer.Timer": [[9, 2, 1, "", "end_times"], [9, 2, 1, "", "measurements"], [9, 3, 1, "", "start"], [9, 2, 1, "", "start_times"], [9, 3, 1, "", "stop"]], "ts_semantic_feature_detector.perfomance.visualization": [[10, 0, 0, "-", "log"]], "ts_semantic_feature_detector.perfomance.visualization.log": [[10, 1, 1, "", "TimerVisualizer"]], "ts_semantic_feature_detector.perfomance.visualization.log.TimerVisualizer": [[10, 3, 1, "", "plot"]], "ts_semantic_feature_detector.segmentation_model": [[12, 0, 0, "-", "model"], [14, 0, 0, "-", "ts_dataset"], [15, 0, 0, "-", "visualization"]], "ts_semantic_feature_detector.segmentation_model.model": [[13, 0, 0, "-", "detection"], [12, 0, 0, "-", "mask_rcnn_stem_segmentation"]], "ts_semantic_feature_detector.segmentation_model.model.detection": [[13, 0, 0, "-", "coco_eval"], [13, 0, 0, "-", "coco_utils"], [13, 0, 0, "-", "engine"], [13, 0, 0, "-", "group_by_aspect_ratio"], [13, 0, 0, "-", "transforms"], [13, 0, 0, "-", "utils"]], "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval": [[13, 1, 1, "", "CocoEvaluator"], [13, 4, 1, "", "convert_to_xywh"], [13, 4, 1, "", "create_common_coco_eval"], [13, 4, 1, "", "evaluate"], [13, 4, 1, "", "merge"]], "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator": [[13, 3, 1, "", "accumulate"], [13, 3, 1, "", "prepare"], [13, 3, 1, "", "prepare_for_coco_detection"], [13, 3, 1, "", "prepare_for_coco_keypoint"], [13, 3, 1, "", "prepare_for_coco_segmentation"], [13, 3, 1, "", "summarize"], [13, 3, 1, "", "synchronize_between_processes"], [13, 3, 1, "", "update"]], "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils": [[13, 1, 1, "", "CocoDetection"], [13, 1, 1, "", "ConvertCocoPolysToMask"], [13, 1, 1, "", "FilterAndRemapCocoCategories"], [13, 4, 1, "", "convert_coco_poly_to_mask"], [13, 4, 1, "", "convert_to_coco_api"], [13, 4, 1, "", "get_coco"], [13, 4, 1, "", "get_coco_api_from_dataset"], [13, 4, 1, "", "get_coco_kp"]], "ts_semantic_feature_detector.segmentation_model.model.detection.engine": [[13, 4, 1, "", "evaluate"], [13, 4, 1, "", "train_one_epoch"]], "ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio": [[13, 1, 1, "", "GroupedBatchSampler"], [13, 4, 1, "", "compute_aspect_ratios"], [13, 4, 1, "", "create_aspect_ratio_groups"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms": [[13, 1, 1, "", "Compose"], [13, 1, 1, "", "ConvertImageDtype"], [13, 1, 1, "", "FixedSizeCrop"], [13, 1, 1, "", "PILToTensor"], [13, 1, 1, "", "RandomHorizontalFlip"], [13, 1, 1, "", "RandomIoUCrop"], [13, 1, 1, "", "RandomPhotometricDistort"], [13, 1, 1, "", "RandomShortestSize"], [13, 1, 1, "", "RandomZoomOut"], [13, 1, 1, "", "ScaleJitter"], [13, 1, 1, "", "SimpleCopyPaste"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ConvertImageDtype": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.FixedSizeCrop": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.PILToTensor": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomHorizontalFlip": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomIoUCrop": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomPhotometricDistort": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomShortestSize": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomZoomOut": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ScaleJitter": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.SimpleCopyPaste": [[13, 3, 1, "", "forward"], [13, 2, 1, "", "training"]], "ts_semantic_feature_detector.segmentation_model.model.detection.utils": [[13, 1, 1, "", "MetricLogger"], [13, 1, 1, "", "SmoothedValue"], [13, 4, 1, "", "all_gather"], [13, 4, 1, "", "collate_fn"], [13, 4, 1, "", "get_rank"], [13, 4, 1, "", "get_world_size"], [13, 4, 1, "", "init_distributed_mode"], [13, 4, 1, "", "is_dist_avail_and_initialized"], [13, 4, 1, "", "is_main_process"], [13, 4, 1, "", "mkdir"], [13, 4, 1, "", "reduce_dict"], [13, 4, 1, "", "save_on_master"], [13, 4, 1, "", "setup_for_distributed"]], "ts_semantic_feature_detector.segmentation_model.model.detection.utils.MetricLogger": [[13, 3, 1, "", "add_meter"], [13, 3, 1, "", "log_every"], [13, 3, 1, "", "synchronize_between_processes"], [13, 3, 1, "", "update"]], "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue": [[13, 5, 1, "", "avg"], [13, 5, 1, "", "global_avg"], [13, 5, 1, "", "max"], [13, 5, 1, "", "median"], [13, 3, 1, "", "synchronize_between_processes"], [13, 3, 1, "", "update"], [13, 5, 1, "", "value"]], "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation": [[12, 1, 1, "", "MaskRCNNStemSegmentationModel"]], "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel": [[12, 3, 1, "", "_divide_dataset"], [12, 3, 1, "", "_get_model"], [12, 3, 1, "", "_get_transforms"], [12, 3, 1, "", "_log_to_file"], [12, 2, 1, "", "dataset"], [12, 2, 1, "", "hyperparams"], [12, 3, 1, "", "inference"], [12, 2, 1, "", "last_best_mAP"], [12, 2, 1, "", "lr_scheduler"], [12, 2, 1, "", "model"], [12, 2, 1, "", "optimizer"], [12, 2, 1, "", "start_epoch"], [12, 3, 1, "", "train"], [12, 2, 1, "", "train_dataset_idxs"], [12, 2, 1, "id0", "train_log"], [12, 2, 1, "", "transforms"], [12, 2, 1, "", "validation_dataset_idxs"], [12, 2, 1, "id1", "validation_log"]], "ts_semantic_feature_detector.segmentation_model.ts_dataset": [[14, 0, 0, "-", "ts_load_dataset"]], "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset": [[14, 1, 1, "", "TerraSentiaDataset"]], "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset": [[14, 3, 1, "", "_get_metrics"], [14, 2, 1, "", "image_size"], [14, 2, 1, "", "mask_imgs"], [14, 2, 1, "", "mask_path"], [14, 2, 1, "", "mean"], [14, 2, 1, "", "num_imbs"], [14, 2, 1, "", "png_imgs"], [14, 2, 1, "", "png_path"], [14, 2, 1, "", "std_dev"], [14, 2, 1, "", "transforms"]], "ts_semantic_feature_detector.segmentation_model.visualization": [[15, 0, 0, "-", "log"]], "ts_semantic_feature_detector.segmentation_model.visualization.log": [[15, 1, 1, "", "MetricsVisualizer"]], "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer": [[15, 3, 1, "", "_load_train_log"], [15, 3, 1, "", "_load_validation_log"], [15, 3, 1, "", "plot_learning_rate"], [15, 3, 1, "", "plot_testing_metrics"], [15, 3, 1, "", "plot_testing_metrics_comparatively"], [15, 3, 1, "", "plot_training_loss_and_lr"], [15, 3, 1, "", "plot_training_loss_metrics_separated"], [15, 3, 1, "", "plot_training_loss_metrics_together"], [15, 2, 1, "", "train_metrics"], [15, 2, 1, "", "validation_metrics"]], "ts_semantic_feature_detector.visualization": [[16, 0, 0, "-", "colors"], [16, 0, 0, "-", "visualizer_2d"], [16, 0, 0, "-", "visualizer_3d"]], "ts_semantic_feature_detector.visualization.colors": [[16, 4, 1, "", "get_color_from_cluster"]], "ts_semantic_feature_detector.visualization.visualizer_2d": [[16, 1, 1, "", "Visualizer2D"]], "ts_semantic_feature_detector.visualization.visualizer_2d.Visualizer2D": [[16, 3, 1, "", "plot_mask_group"], [16, 3, 1, "", "show"]], "ts_semantic_feature_detector.visualization.visualizer_3d": [[16, 1, 1, "", "Visualizer3D"]], "ts_semantic_feature_detector.visualization.visualizer_3d.Visualizer3D": [[16, 3, 1, "", "show"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "ts_semantic_feature_detector": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "subpackag": [2, 5, 9, 11, 12], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "features_2d": 3, "submodul": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "box": 3, "curv": 3, "detect": [3, 13], "mask": 3, "track": 3, "features_3d": 4, "camera": 4, "crop": 4, "ground_plan": 4, "scene": 4, "sequenc": 4, "input_util": [5, 6, 7], "extrins": 5, "extractor": 6, "loader": 7, "rosbag": 7, "svo_z": 7, "sync_load": 7, "output_util": 8, "writer": 8, "perfom": [9, 10], "timer": 9, "visual": [10, 15, 16], "log": [10, 15], "segmentation_model": [11, 12, 13, 14, 15], "model": [12, 13], "mask_rcnn_stem_segment": 12, "coco_ev": 13, "coco_util": 13, "engin": 13, "group_by_aspect_ratio": 13, "preset": 13, "train": 13, "transform": 13, "util": 13, "ts_dataset": 14, "ts_load_dataset": 14, "color": 16, "visualizer_2d": 16, "visualizer_3d": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to ts_semantic_feature_detector\u2019s documentation!": [[0, "welcome-to-ts-semantic-feature-detector-s-documentation"]], "Contents:": [[0, null]], "ts_semantic_feature_detector": [[1, "ts-semantic-feature-detector"]], "ts_semantic_feature_detector package": [[2, "ts-semantic-feature-detector-package"]], "Subpackages": [[2, "subpackages"], [5, "subpackages"], [9, "subpackages"], [11, "subpackages"], [12, "subpackages"]], "Module contents": [[2, "module-ts_semantic_feature_detector"], [3, "module-ts_semantic_feature_detector.features_2d"], [4, "module-ts_semantic_feature_detector.features_3d"], [5, "module-ts_semantic_feature_detector.input_utils"], [6, "module-ts_semantic_feature_detector.input_utils.extractor"], [7, "module-ts_semantic_feature_detector.input_utils.loaders"], [8, "module-ts_semantic_feature_detector.output_utils"], [9, "module-ts_semantic_feature_detector.perfomance"], [10, "module-ts_semantic_feature_detector.perfomance.visualization"], [11, "module-ts_semantic_feature_detector.segmentation_model"], [12, "module-ts_semantic_feature_detector.segmentation_model.model"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection"], [14, "module-ts_semantic_feature_detector.segmentation_model.ts_dataset"], [15, "module-ts_semantic_feature_detector.segmentation_model.visualization"], [16, "module-ts_semantic_feature_detector.visualization"]], "ts_semantic_feature_detector.features_2d package": [[3, "ts-semantic-feature-detector-features-2d-package"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"]], "ts_semantic_feature_detector.features_2d.boxes module": [[3, "module-ts_semantic_feature_detector.features_2d.boxes"]], "ts_semantic_feature_detector.features_2d.curves module": [[3, "module-ts_semantic_feature_detector.features_2d.curves"]], "ts_semantic_feature_detector.features_2d.detections module": [[3, "module-ts_semantic_feature_detector.features_2d.detections"]], "ts_semantic_feature_detector.features_2d.masks module": [[3, "module-ts_semantic_feature_detector.features_2d.masks"]], "ts_semantic_feature_detector.features_2d.tracking module": [[3, "module-ts_semantic_feature_detector.features_2d.tracking"]], "ts_semantic_feature_detector.features_3d package": [[4, "ts-semantic-feature-detector-features-3d-package"]], "ts_semantic_feature_detector.features_3d.camera module": [[4, "module-ts_semantic_feature_detector.features_3d.camera"]], "ts_semantic_feature_detector.features_3d.crop module": [[4, "module-ts_semantic_feature_detector.features_3d.crop"]], "ts_semantic_feature_detector.features_3d.ground_plane module": [[4, "module-ts_semantic_feature_detector.features_3d.ground_plane"]], "ts_semantic_feature_detector.features_3d.scene module": [[4, "module-ts_semantic_feature_detector.features_3d.scene"]], "ts_semantic_feature_detector.features_3d.sequence module": [[4, "module-ts_semantic_feature_detector.features_3d.sequence"]], "ts_semantic_feature_detector.input_utils package": [[5, "ts-semantic-feature-detector-input-utils-package"]], "ts_semantic_feature_detector.input_utils.extrinsics module": [[5, "module-ts_semantic_feature_detector.input_utils.extrinsics"]], "ts_semantic_feature_detector.input_utils.extractor package": [[6, "ts-semantic-feature-detector-input-utils-extractor-package"]], "ts_semantic_feature_detector.input_utils.extractor.extractor module": [[6, "module-ts_semantic_feature_detector.input_utils.extractor.extractor"]], "ts_semantic_feature_detector.input_utils.loaders package": [[7, "ts-semantic-feature-detector-input-utils-loaders-package"]], "ts_semantic_feature_detector.input_utils.loaders.rosbags module": [[7, "module-ts_semantic_feature_detector.input_utils.loaders.rosbags"]], "ts_semantic_feature_detector.input_utils.loaders.svo_zed module": [[7, "module-ts_semantic_feature_detector.input_utils.loaders.svo_zed"]], "ts_semantic_feature_detector.input_utils.loaders.sync_loader module": [[7, "module-ts_semantic_feature_detector.input_utils.loaders.sync_loader"]], "ts_semantic_feature_detector.output_utils package": [[8, "ts-semantic-feature-detector-output-utils-package"]], "ts_semantic_feature_detector.output_utils.writer module": [[8, "module-ts_semantic_feature_detector.output_utils.writer"]], "ts_semantic_feature_detector.perfomance package": [[9, "ts-semantic-feature-detector-perfomance-package"]], "ts_semantic_feature_detector.perfomance.timer module": [[9, "module-ts_semantic_feature_detector.perfomance.timer"]], "ts_semantic_feature_detector.perfomance.visualization package": [[10, "ts-semantic-feature-detector-perfomance-visualization-package"]], "ts_semantic_feature_detector.perfomance.visualization.log module": [[10, "module-ts_semantic_feature_detector.perfomance.visualization.log"]], "ts_semantic_feature_detector.segmentation_model package": [[11, "ts-semantic-feature-detector-segmentation-model-package"]], "ts_semantic_feature_detector.segmentation_model.model package": [[12, "ts-semantic-feature-detector-segmentation-model-model-package"]], "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation module": [[12, "module-ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation"]], "ts_semantic_feature_detector.segmentation_model.model.detection package": [[13, "ts-semantic-feature-detector-segmentation-model-model-detection-package"]], "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval module": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval"]], "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils module": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils"]], "ts_semantic_feature_detector.segmentation_model.model.detection.engine module": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.engine"]], "ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio module": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio"]], "ts_semantic_feature_detector.segmentation_model.model.detection.presets module": [[13, "ts-semantic-feature-detector-segmentation-model-model-detection-presets-module"]], "ts_semantic_feature_detector.segmentation_model.model.detection.train module": [[13, "ts-semantic-feature-detector-segmentation-model-model-detection-train-module"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms module": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.transforms"]], "ts_semantic_feature_detector.segmentation_model.model.detection.utils module": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.utils"]], "ts_semantic_feature_detector.segmentation_model.ts_dataset package": [[14, "ts-semantic-feature-detector-segmentation-model-ts-dataset-package"]], "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset module": [[14, "module-ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset"]], "ts_semantic_feature_detector.segmentation_model.visualization package": [[15, "ts-semantic-feature-detector-segmentation-model-visualization-package"]], "ts_semantic_feature_detector.segmentation_model.visualization.log module": [[15, "module-ts_semantic_feature_detector.segmentation_model.visualization.log"]], "ts_semantic_feature_detector.visualization package": [[16, "ts-semantic-feature-detector-visualization-package"]], "ts_semantic_feature_detector.visualization.colors module": [[16, "module-ts_semantic_feature_detector.visualization.colors"]], "ts_semantic_feature_detector.visualization.visualizer_2d module": [[16, "module-ts_semantic_feature_detector.visualization.visualizer_2d"]], "ts_semantic_feature_detector.visualization.visualizer_3d module": [[16, "module-ts_semantic_feature_detector.visualization.visualizer_3d"]]}, "indexentries": {"module": [[2, "module-ts_semantic_feature_detector"], [3, "module-ts_semantic_feature_detector.features_2d"], [3, "module-ts_semantic_feature_detector.features_2d.boxes"], [3, "module-ts_semantic_feature_detector.features_2d.curves"], [3, "module-ts_semantic_feature_detector.features_2d.detections"], [3, "module-ts_semantic_feature_detector.features_2d.masks"], [3, "module-ts_semantic_feature_detector.features_2d.tracking"], [4, "module-ts_semantic_feature_detector.features_3d"], [4, "module-ts_semantic_feature_detector.features_3d.camera"], [4, "module-ts_semantic_feature_detector.features_3d.crop"], [4, "module-ts_semantic_feature_detector.features_3d.ground_plane"], [4, "module-ts_semantic_feature_detector.features_3d.scene"], [4, "module-ts_semantic_feature_detector.features_3d.sequence"], [5, "module-ts_semantic_feature_detector.input_utils"], [5, "module-ts_semantic_feature_detector.input_utils.extrinsics"], [6, "module-ts_semantic_feature_detector.input_utils.extractor"], [6, "module-ts_semantic_feature_detector.input_utils.extractor.extractor"], [7, "module-ts_semantic_feature_detector.input_utils.loaders"], [7, "module-ts_semantic_feature_detector.input_utils.loaders.rosbags"], [7, "module-ts_semantic_feature_detector.input_utils.loaders.svo_zed"], [7, "module-ts_semantic_feature_detector.input_utils.loaders.sync_loader"], [8, "module-ts_semantic_feature_detector.output_utils"], [8, "module-ts_semantic_feature_detector.output_utils.writer"], [9, "module-ts_semantic_feature_detector.perfomance"], [9, "module-ts_semantic_feature_detector.perfomance.timer"], [10, "module-ts_semantic_feature_detector.perfomance.visualization"], [10, "module-ts_semantic_feature_detector.perfomance.visualization.log"], [11, "module-ts_semantic_feature_detector.segmentation_model"], [12, "module-ts_semantic_feature_detector.segmentation_model.model"], [12, "module-ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.engine"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.transforms"], [13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.utils"], [14, "module-ts_semantic_feature_detector.segmentation_model.ts_dataset"], [14, "module-ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset"], [15, "module-ts_semantic_feature_detector.segmentation_model.visualization"], [15, "module-ts_semantic_feature_detector.segmentation_model.visualization.log"], [16, "module-ts_semantic_feature_detector.visualization"], [16, "module-ts_semantic_feature_detector.visualization.colors"], [16, "module-ts_semantic_feature_detector.visualization.visualizer_2d"], [16, "module-ts_semantic_feature_detector.visualization.visualizer_3d"]], "ts_semantic_feature_detector": [[2, "module-ts_semantic_feature_detector"]], "agriculturesort (class in ts_semantic_feature_detector.features_2d.tracking)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort"]], "box (class in ts_semantic_feature_detector.features_2d.boxes)": [[3, "ts_semantic_feature_detector.features_2d.boxes.Box"]], "boxgroup (class in ts_semantic_feature_detector.features_2d.boxes)": [[3, "ts_semantic_feature_detector.features_2d.boxes.BoxGroup"]], "curve2d (class in ts_semantic_feature_detector.features_2d.curves)": [[3, "ts_semantic_feature_detector.features_2d.curves.Curve2D"]], "detectiongroup (class in ts_semantic_feature_detector.features_2d.detections)": [[3, "ts_semantic_feature_detector.features_2d.detections.DetectionGroup"]], "kalmanboxtracker (class in ts_semantic_feature_detector.features_2d.tracking)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker"]], "line2d (class in ts_semantic_feature_detector.features_2d.curves)": [[3, "ts_semantic_feature_detector.features_2d.curves.Line2D"]], "mask (class in ts_semantic_feature_detector.features_2d.masks)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask"]], "maskgroup (class in ts_semantic_feature_detector.features_2d.masks)": [[3, "ts_semantic_feature_detector.features_2d.masks.MaskGroup"]], "_associate_detections_to_trackers() (ts_semantic_feature_detector.features_2d.tracking.agriculturesort method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort._associate_detections_to_trackers"]], "_convert_bbox_to_z() (ts_semantic_feature_detector.features_2d.tracking.kalmanboxtracker method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker._convert_bbox_to_z"]], "_convert_x_to_bbox() (ts_semantic_feature_detector.features_2d.tracking.kalmanboxtracker method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker._convert_x_to_bbox"]], "_get_ransac_line() (ts_semantic_feature_detector.features_2d.masks.mask method)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask._get_RANSAC_line"]], "_get_average_curve() (ts_semantic_feature_detector.features_2d.masks.mask method)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask._get_average_curve"]], "_iou_batch() (ts_semantic_feature_detector.features_2d.tracking.agriculturesort method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort._iou_batch"]], "_linear_assignment() (ts_semantic_feature_detector.features_2d.tracking.agriculturesort method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort._linear_assignment"]], "angular_coef (ts_semantic_feature_detector.features_2d.curves.line2d attribute)": [[3, "ts_semantic_feature_detector.features_2d.curves.Line2D.angular_coef"]], "average_curve (ts_semantic_feature_detector.features_2d.masks.mask attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.average_curve"]], "binary_data (ts_semantic_feature_detector.features_2d.masks.mask attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.binary_data"]], "binary_data_idxs (ts_semantic_feature_detector.features_2d.masks.mask attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.binary_data_idxs"]], "binary_threshold (ts_semantic_feature_detector.features_2d.masks.mask attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.binary_threshold"]], "boxes (ts_semantic_feature_detector.features_2d.detections.detectiongroup attribute)": [[3, "ts_semantic_feature_detector.features_2d.detections.DetectionGroup.boxes"]], "camera (ts_semantic_feature_detector.features_2d.tracking.agriculturesort attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.camera"]], "count (ts_semantic_feature_detector.features_2d.tracking.kalmanboxtracker attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker.count"]], "crops (ts_semantic_feature_detector.features_2d.tracking.kalmanboxtracker attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker.crops"]], "data (ts_semantic_feature_detector.features_2d.boxes.box attribute)": [[3, "ts_semantic_feature_detector.features_2d.boxes.Box.data"]], "data (ts_semantic_feature_detector.features_2d.boxes.boxgroup attribute)": [[3, "ts_semantic_feature_detector.features_2d.boxes.BoxGroup.data"]], "data (ts_semantic_feature_detector.features_2d.masks.mask attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.data"]], "data (ts_semantic_feature_detector.features_2d.masks.maskgroup attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.MaskGroup.data"]], "evaluate_line_at_x() (ts_semantic_feature_detector.features_2d.curves.line2d method)": [[3, "ts_semantic_feature_detector.features_2d.curves.Line2D.evaluate_line_at_x"]], "evaluate_line_at_y() (ts_semantic_feature_detector.features_2d.curves.line2d method)": [[3, "ts_semantic_feature_detector.features_2d.curves.Line2D.evaluate_line_at_y"]], "extract_curves() (ts_semantic_feature_detector.features_2d.masks.mask method)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.extract_curves"]], "extract_curves() (ts_semantic_feature_detector.features_2d.masks.maskgroup method)": [[3, "ts_semantic_feature_detector.features_2d.masks.MaskGroup.extract_curves"]], "filter_redundancy() (ts_semantic_feature_detector.features_2d.detections.detectiongroup method)": [[3, "ts_semantic_feature_detector.features_2d.detections.DetectionGroup.filter_redundancy"]], "frame_count (ts_semantic_feature_detector.features_2d.tracking.agriculturesort attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.frame_count"]], "get_crops_motion() (ts_semantic_feature_detector.features_2d.tracking.agriculturesort method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.get_crops_motion"]], "get_state() (ts_semantic_feature_detector.features_2d.tracking.kalmanboxtracker method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker.get_state"]], "iou_threshold (ts_semantic_feature_detector.features_2d.tracking.agriculturesort attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.iou_threshold"]], "is_empty() (ts_semantic_feature_detector.features_2d.detections.detectiongroup method)": [[3, "ts_semantic_feature_detector.features_2d.detections.DetectionGroup.is_empty"]], "linear_coef (ts_semantic_feature_detector.features_2d.curves.line2d attribute)": [[3, "ts_semantic_feature_detector.features_2d.curves.Line2D.linear_coef"]], "masks (ts_semantic_feature_detector.features_2d.detections.detectiongroup attribute)": [[3, "ts_semantic_feature_detector.features_2d.detections.DetectionGroup.masks"]], "max_age (ts_semantic_feature_detector.features_2d.tracking.agriculturesort attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.max_age"]], "metric_filtering() (ts_semantic_feature_detector.features_2d.detections.detectiongroup method)": [[3, "ts_semantic_feature_detector.features_2d.detections.DetectionGroup.metric_filtering"]], "min_hits (ts_semantic_feature_detector.features_2d.tracking.agriculturesort attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.min_hits"]], "plot() (ts_semantic_feature_detector.features_2d.boxes.box method)": [[3, "ts_semantic_feature_detector.features_2d.boxes.Box.plot"]], "plot() (ts_semantic_feature_detector.features_2d.boxes.boxgroup method)": [[3, "ts_semantic_feature_detector.features_2d.boxes.BoxGroup.plot"]], "plot() (ts_semantic_feature_detector.features_2d.curves.curve2d method)": [[3, "ts_semantic_feature_detector.features_2d.curves.Curve2D.plot"]], "plot() (ts_semantic_feature_detector.features_2d.curves.line2d method)": [[3, "ts_semantic_feature_detector.features_2d.curves.Line2D.plot"]], "plot() (ts_semantic_feature_detector.features_2d.masks.mask method)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.plot"]], "plot() (ts_semantic_feature_detector.features_2d.masks.maskgroup method)": [[3, "ts_semantic_feature_detector.features_2d.masks.MaskGroup.plot"]], "predict() (ts_semantic_feature_detector.features_2d.tracking.kalmanboxtracker method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker.predict"]], "ransac_line (ts_semantic_feature_detector.features_2d.masks.mask attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.ransac_line"]], "scores (ts_semantic_feature_detector.features_2d.boxes.boxgroup attribute)": [[3, "ts_semantic_feature_detector.features_2d.boxes.BoxGroup.scores"]], "scores (ts_semantic_feature_detector.features_2d.detections.detectiongroup attribute)": [[3, "ts_semantic_feature_detector.features_2d.detections.DetectionGroup.scores"]], "step() (ts_semantic_feature_detector.features_2d.tracking.agriculturesort method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.step"]], "trackers (ts_semantic_feature_detector.features_2d.tracking.agriculturesort attribute)": [[3, "ts_semantic_feature_detector.features_2d.tracking.AgricultureSort.trackers"]], "ts_semantic_feature_detector.features_2d": [[3, "module-ts_semantic_feature_detector.features_2d"]], "ts_semantic_feature_detector.features_2d.boxes": [[3, "module-ts_semantic_feature_detector.features_2d.boxes"]], "ts_semantic_feature_detector.features_2d.curves": [[3, "module-ts_semantic_feature_detector.features_2d.curves"]], "ts_semantic_feature_detector.features_2d.detections": [[3, "module-ts_semantic_feature_detector.features_2d.detections"]], "ts_semantic_feature_detector.features_2d.masks": [[3, "module-ts_semantic_feature_detector.features_2d.masks"]], "ts_semantic_feature_detector.features_2d.tracking": [[3, "module-ts_semantic_feature_detector.features_2d.tracking"]], "update() (ts_semantic_feature_detector.features_2d.tracking.kalmanboxtracker method)": [[3, "ts_semantic_feature_detector.features_2d.tracking.KalmanBoxTracker.update"]], "x (ts_semantic_feature_detector.features_2d.curves.curve2d attribute)": [[3, "ts_semantic_feature_detector.features_2d.curves.Curve2D.x"]], "x_bottom (ts_semantic_feature_detector.features_2d.masks.mask attribute)": [[3, "ts_semantic_feature_detector.features_2d.masks.Mask.x_bottom"]], "y (ts_semantic_feature_detector.features_2d.curves.curve2d attribute)": [[3, "ts_semantic_feature_detector.features_2d.curves.Curve2D.y"]], "agriculturalscene (class in ts_semantic_feature_detector.features_3d.scene)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene"]], "agriculturalsequence (class in ts_semantic_feature_detector.features_3d.sequence)": [[4, "ts_semantic_feature_detector.features_3d.sequence.AgriculturalSequence"]], "corncrop (class in ts_semantic_feature_detector.features_3d.crop)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop"]], "corncropgroup (class in ts_semantic_feature_detector.features_3d.crop)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCropGroup"]], "groundplane (class in ts_semantic_feature_detector.features_3d.ground_plane)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane"]], "stereocamera (class in ts_semantic_feature_detector.features_3d.camera)": [[4, "ts_semantic_feature_detector.features_3d.camera.StereoCamera"]], "_apply_extrinsics_to_3d_vector() (ts_semantic_feature_detector.features_3d.scene.agriculturalscene method)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene._apply_extrinsics_to_3D_vector"]], "_filter_crop_depth() (ts_semantic_feature_detector.features_3d.crop.corncrop method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop._filter_crop_depth"]], "_get_plane_coefficients() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane._get_plane_coefficients"]], "_get_principal_component() (ts_semantic_feature_detector.features_3d.crop.corncrop method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop._get_principal_component"]], "_get_principal_components() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane._get_principal_components"]], "_get_vector_angles() (ts_semantic_feature_detector.features_3d.crop.corncrop method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop._get_vector_angles"]], "_parameter_trackbars_callback() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane._parameter_trackbars_callback"]], "add_extrinsics_information() (ts_semantic_feature_detector.features_3d.scene.agriculturalscene method)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene.add_extrinsics_information"]], "add_scene() (ts_semantic_feature_detector.features_3d.sequence.agriculturalsequence method)": [[4, "ts_semantic_feature_detector.features_3d.sequence.AgriculturalSequence.add_scene"]], "age (ts_semantic_feature_detector.features_3d.scene.agriculturalscene attribute)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene.age"]], "average_point (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.average_point"]], "binary_mask (ts_semantic_feature_detector.features_3d.ground_plane.groundplane attribute)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.binary_mask"]], "cluster (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.cluster"]], "cluster_crops() (ts_semantic_feature_detector.features_3d.sequence.agriculturalsequence method)": [[4, "ts_semantic_feature_detector.features_3d.sequence.AgriculturalSequence.cluster_crops"]], "coeficients (ts_semantic_feature_detector.features_3d.ground_plane.groundplane attribute)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.coeficients"]], "crop_box (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.crop_box"]], "crop_group (ts_semantic_feature_detector.features_3d.scene.agriculturalscene attribute)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene.crop_group"]], "crop_mask (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.crop_mask"]], "crop_vector (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.crop_vector"]], "crop_vector_angles (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.crop_vector_angles"]], "crops (ts_semantic_feature_detector.features_3d.crop.corncropgroup attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCropGroup.crops"]], "emerging_point (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.emerging_point"]], "estimated_motion_2d (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.estimated_motion_2d"]], "evaluate_at_determined_x_z() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.evaluate_at_determined_x_z"]], "extrinsics (ts_semantic_feature_detector.features_3d.scene.agriculturalscene attribute)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene.extrinsics"]], "filter_data (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.filter_data"]], "find_emerging_point() (ts_semantic_feature_detector.features_3d.crop.corncrop method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.find_emerging_point"]], "get_2d_point() (ts_semantic_feature_detector.features_3d.camera.stereocamera method)": [[4, "ts_semantic_feature_detector.features_3d.camera.StereoCamera.get_2d_point"]], "get_3d_point() (ts_semantic_feature_detector.features_3d.camera.stereocamera method)": [[4, "ts_semantic_feature_detector.features_3d.camera.StereoCamera.get_3d_point"]], "get_ngrdi_mask() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.get_ngrdi_mask"]], "get_threshold_gaussian_mask() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.get_threshold_gaussian_mask"]], "get_transformation_matrix() (ts_semantic_feature_detector.features_3d.scene.agriculturalscene method)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene.get_transformation_matrix"]], "ground_plane (ts_semantic_feature_detector.features_3d.scene.agriculturalscene attribute)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene.ground_plane"]], "ground_vectors (ts_semantic_feature_detector.features_3d.ground_plane.groundplane attribute)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.ground_vectors"]], "hsv_img (ts_semantic_feature_detector.features_3d.ground_plane.groundplane attribute)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.hsv_img"]], "intrinsics_matrix (ts_semantic_feature_detector.features_3d.camera.stereocamera attribute)": [[4, "ts_semantic_feature_detector.features_3d.camera.StereoCamera.intrinsics_matrix"]], "intrinsics_matrix_inv (ts_semantic_feature_detector.features_3d.camera.stereocamera attribute)": [[4, "ts_semantic_feature_detector.features_3d.camera.StereoCamera.intrinsics_matrix_inv"]], "load_image() (ts_semantic_feature_detector.features_3d.camera.stereocamera method)": [[4, "ts_semantic_feature_detector.features_3d.camera.StereoCamera.load_image"]], "normal_vector (ts_semantic_feature_detector.features_3d.ground_plane.groundplane attribute)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.normal_vector"]], "plot() (ts_semantic_feature_detector.features_3d.crop.corncrop method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.plot"]], "plot() (ts_semantic_feature_detector.features_3d.crop.corncropgroup method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCropGroup.plot"]], "plot() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.plot"]], "plot() (ts_semantic_feature_detector.features_3d.scene.agriculturalscene method)": [[4, "ts_semantic_feature_detector.features_3d.scene.AgriculturalScene.plot"]], "plot() (ts_semantic_feature_detector.features_3d.sequence.agriculturalsequence method)": [[4, "ts_semantic_feature_detector.features_3d.sequence.AgriculturalSequence.plot"]], "plot_depth_histogram() (ts_semantic_feature_detector.features_3d.crop.corncrop method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.plot_depth_histogram"]], "plot_depth_histograms() (ts_semantic_feature_detector.features_3d.crop.corncropgroup method)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCropGroup.plot_depth_histograms"]], "ps_3d (ts_semantic_feature_detector.features_3d.crop.corncrop attribute)": [[4, "ts_semantic_feature_detector.features_3d.crop.CornCrop.ps_3d"]], "remove_old_scenes() (ts_semantic_feature_detector.features_3d.sequence.agriculturalsequence method)": [[4, "ts_semantic_feature_detector.features_3d.sequence.AgriculturalSequence.remove_old_scenes"]], "rgb_img (ts_semantic_feature_detector.features_3d.ground_plane.groundplane attribute)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.rgb_img"]], "scenes (ts_semantic_feature_detector.features_3d.sequence.agriculturalsequence attribute)": [[4, "ts_semantic_feature_detector.features_3d.sequence.AgriculturalSequence.scenes"]], "size (ts_semantic_feature_detector.features_3d.camera.stereocamera attribute)": [[4, "ts_semantic_feature_detector.features_3d.camera.StereoCamera.size"]], "ts_semantic_feature_detector.features_3d": [[4, "module-ts_semantic_feature_detector.features_3d"]], "ts_semantic_feature_detector.features_3d.camera": [[4, "module-ts_semantic_feature_detector.features_3d.camera"]], "ts_semantic_feature_detector.features_3d.crop": [[4, "module-ts_semantic_feature_detector.features_3d.crop"]], "ts_semantic_feature_detector.features_3d.ground_plane": [[4, "module-ts_semantic_feature_detector.features_3d.ground_plane"]], "ts_semantic_feature_detector.features_3d.scene": [[4, "module-ts_semantic_feature_detector.features_3d.scene"]], "ts_semantic_feature_detector.features_3d.sequence": [[4, "module-ts_semantic_feature_detector.features_3d.sequence"]], "tune_values_tool() (ts_semantic_feature_detector.features_3d.ground_plane.groundplane method)": [[4, "ts_semantic_feature_detector.features_3d.ground_plane.GroundPlane.tune_values_tool"]], "get_extrinsics() (in module ts_semantic_feature_detector.input_utils.extrinsics)": [[5, "ts_semantic_feature_detector.input_utils.extrinsics.get_extrinsics"]], "ts_semantic_feature_detector.input_utils": [[5, "module-ts_semantic_feature_detector.input_utils"]], "ts_semantic_feature_detector.input_utils.extrinsics": [[5, "module-ts_semantic_feature_detector.input_utils.extrinsics"]], "dataextractor (class in ts_semantic_feature_detector.input_utils.extractor.extractor)": [[6, "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor"]], "_create_folder_if_needed() (ts_semantic_feature_detector.input_utils.extractor.extractor.dataextractor method)": [[6, "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor._create_folder_if_needed"]], "_get_svo_subscribers() (ts_semantic_feature_detector.input_utils.extractor.extractor.dataextractor method)": [[6, "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor._get_svo_subscribers"]], "_get_topics_names() (ts_semantic_feature_detector.input_utils.extractor.extractor.dataextractor method)": [[6, "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor._get_topics_names"]], "_svo_img_cb() (ts_semantic_feature_detector.input_utils.extractor.extractor.dataextractor method)": [[6, "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor._svo_img_cb"]], "_write_rosbag_raw_data() (ts_semantic_feature_detector.input_utils.extractor.extractor.dataextractor method)": [[6, "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor._write_rosbag_raw_data"]], "_write_svo_raw_data() (ts_semantic_feature_detector.input_utils.extractor.extractor.dataextractor method)": [[6, "ts_semantic_feature_detector.input_utils.extractor.extractor.DataExtractor._write_svo_raw_data"]], "ts_semantic_feature_detector.input_utils.extractor": [[6, "module-ts_semantic_feature_detector.input_utils.extractor"]], "ts_semantic_feature_detector.input_utils.extractor.extractor": [[6, "module-ts_semantic_feature_detector.input_utils.extractor.extractor"]], "rosbagloader (class in ts_semantic_feature_detector.input_utils.loaders.rosbags)": [[7, "ts_semantic_feature_detector.input_utils.loaders.rosbags.RosbagLoader"]], "svozedloader (class in ts_semantic_feature_detector.input_utils.loaders.svo_zed)": [[7, "ts_semantic_feature_detector.input_utils.loaders.svo_zed.SVOZedLoader"]], "synchronizedloader (class in ts_semantic_feature_detector.input_utils.loaders.sync_loader)": [[7, "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader"]], "_get_csv_and_times() (ts_semantic_feature_detector.input_utils.loaders.rosbags.rosbagloader method)": [[7, "ts_semantic_feature_detector.input_utils.loaders.rosbags.RosbagLoader._get_csv_and_times"]], "_get_image_set_times() (ts_semantic_feature_detector.input_utils.loaders.svo_zed.svozedloader method)": [[7, "ts_semantic_feature_detector.input_utils.loaders.svo_zed.SVOZedLoader._get_image_set_times"]], "_get_low_freq_topic() (ts_semantic_feature_detector.input_utils.loaders.sync_loader.synchronizedloader method)": [[7, "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader._get_low_freq_topic"]], "data (ts_semantic_feature_detector.input_utils.loaders.sync_loader.synchronizedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader.data"]], "data_path (ts_semantic_feature_detector.input_utils.loaders.sync_loader.synchronizedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader.data_path"]], "depth_imgs (ts_semantic_feature_detector.input_utils.loaders.svo_zed.svozedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.svo_zed.SVOZedLoader.depth_imgs"]], "depth_times (ts_semantic_feature_detector.input_utils.loaders.svo_zed.svozedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.svo_zed.SVOZedLoader.depth_times"]], "ekf (ts_semantic_feature_detector.input_utils.loaders.rosbags.rosbagloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.rosbags.RosbagLoader.ekf"]], "ekf_times (ts_semantic_feature_detector.input_utils.loaders.rosbags.rosbagloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.rosbags.RosbagLoader.ekf_times"]], "get_sync_data() (ts_semantic_feature_detector.input_utils.loaders.sync_loader.synchronizedloader method)": [[7, "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader.get_sync_data"]], "imu (ts_semantic_feature_detector.input_utils.loaders.rosbags.rosbagloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.rosbags.RosbagLoader.imu"]], "imu_times (ts_semantic_feature_detector.input_utils.loaders.rosbags.rosbagloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.rosbags.RosbagLoader.imu_times"]], "low_freq_topic (ts_semantic_feature_detector.input_utils.loaders.sync_loader.synchronizedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader.low_freq_topic"]], "rgb_imgs (ts_semantic_feature_detector.input_utils.loaders.svo_zed.svozedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.svo_zed.SVOZedLoader.rgb_imgs"]], "rgb_times (ts_semantic_feature_detector.input_utils.loaders.svo_zed.svozedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.svo_zed.SVOZedLoader.rgb_times"]], "times (ts_semantic_feature_detector.input_utils.loaders.sync_loader.synchronizedloader attribute)": [[7, "ts_semantic_feature_detector.input_utils.loaders.sync_loader.SynchronizedLoader.times"]], "ts_semantic_feature_detector.input_utils.loaders": [[7, "module-ts_semantic_feature_detector.input_utils.loaders"]], "ts_semantic_feature_detector.input_utils.loaders.rosbags": [[7, "module-ts_semantic_feature_detector.input_utils.loaders.rosbags"]], "ts_semantic_feature_detector.input_utils.loaders.svo_zed": [[7, "module-ts_semantic_feature_detector.input_utils.loaders.svo_zed"]], "ts_semantic_feature_detector.input_utils.loaders.sync_loader": [[7, "module-ts_semantic_feature_detector.input_utils.loaders.sync_loader"]], "outputwriter (class in ts_semantic_feature_detector.output_utils.writer)": [[8, "ts_semantic_feature_detector.output_utils.writer.OutputWriter"]], "odom_file (ts_semantic_feature_detector.output_utils.writer.outputwriter attribute)": [[8, "ts_semantic_feature_detector.output_utils.writer.OutputWriter.odom_file"]], "points_file (ts_semantic_feature_detector.output_utils.writer.outputwriter attribute)": [[8, "ts_semantic_feature_detector.output_utils.writer.OutputWriter.points_file"]], "separator (ts_semantic_feature_detector.output_utils.writer.outputwriter attribute)": [[8, "ts_semantic_feature_detector.output_utils.writer.OutputWriter.separator"]], "ts_semantic_feature_detector.output_utils": [[8, "module-ts_semantic_feature_detector.output_utils"]], "ts_semantic_feature_detector.output_utils.writer": [[8, "module-ts_semantic_feature_detector.output_utils.writer"]], "write_emerging_points() (ts_semantic_feature_detector.output_utils.writer.outputwriter method)": [[8, "ts_semantic_feature_detector.output_utils.writer.OutputWriter.write_emerging_points"]], "write_odometry_factors() (ts_semantic_feature_detector.output_utils.writer.outputwriter method)": [[8, "ts_semantic_feature_detector.output_utils.writer.OutputWriter.write_odometry_factors"]], "write_times() (ts_semantic_feature_detector.output_utils.writer.outputwriter method)": [[8, "ts_semantic_feature_detector.output_utils.writer.OutputWriter.write_times"]], "timer (class in ts_semantic_feature_detector.perfomance.timer)": [[9, "ts_semantic_feature_detector.perfomance.timer.Timer"]], "end_times (ts_semantic_feature_detector.perfomance.timer.timer attribute)": [[9, "ts_semantic_feature_detector.perfomance.timer.Timer.end_times"]], "measurements (ts_semantic_feature_detector.perfomance.timer.timer attribute)": [[9, "ts_semantic_feature_detector.perfomance.timer.Timer.measurements"]], "start() (ts_semantic_feature_detector.perfomance.timer.timer method)": [[9, "ts_semantic_feature_detector.perfomance.timer.Timer.start"]], "start_times (ts_semantic_feature_detector.perfomance.timer.timer attribute)": [[9, "ts_semantic_feature_detector.perfomance.timer.Timer.start_times"]], "stop() (ts_semantic_feature_detector.perfomance.timer.timer method)": [[9, "ts_semantic_feature_detector.perfomance.timer.Timer.stop"]], "ts_semantic_feature_detector.perfomance": [[9, "module-ts_semantic_feature_detector.perfomance"]], "ts_semantic_feature_detector.perfomance.timer": [[9, "module-ts_semantic_feature_detector.perfomance.timer"]], "timervisualizer (class in ts_semantic_feature_detector.perfomance.visualization.log)": [[10, "ts_semantic_feature_detector.perfomance.visualization.log.TimerVisualizer"]], "plot() (ts_semantic_feature_detector.perfomance.visualization.log.timervisualizer method)": [[10, "ts_semantic_feature_detector.perfomance.visualization.log.TimerVisualizer.plot"]], "ts_semantic_feature_detector.perfomance.visualization": [[10, "module-ts_semantic_feature_detector.perfomance.visualization"]], "ts_semantic_feature_detector.perfomance.visualization.log": [[10, "module-ts_semantic_feature_detector.perfomance.visualization.log"]], "ts_semantic_feature_detector.segmentation_model": [[11, "module-ts_semantic_feature_detector.segmentation_model"]], "maskrcnnstemsegmentationmodel (class in ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel"]], "_divide_dataset() (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel method)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel._divide_dataset"]], "_get_model() (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel method)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel._get_model"]], "_get_transforms() (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel method)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel._get_transforms"]], "_log_to_file() (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel method)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel._log_to_file"]], "dataset (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.dataset"]], "hyperparams (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.hyperparams"]], "inference() (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel method)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.inference"]], "last_best_map (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.last_best_mAP"]], "lr_scheduler (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.lr_scheduler"]], "model (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.model"]], "optimizer (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.optimizer"]], "start_epoch (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.start_epoch"]], "train() (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel method)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.train"]], "train_dataset_idxs (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.train_dataset_idxs"]], "train_log (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "id0"], [12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.train_log"]], "transforms (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.transforms"]], "ts_semantic_feature_detector.segmentation_model.model": [[12, "module-ts_semantic_feature_detector.segmentation_model.model"]], "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation": [[12, "module-ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation"]], "validation_dataset_idxs (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.validation_dataset_idxs"]], "validation_log (ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.maskrcnnstemsegmentationmodel attribute)": [[12, "id1"], [12, "ts_semantic_feature_detector.segmentation_model.model.mask_rcnn_stem_segmentation.MaskRCNNStemSegmentationModel.validation_log"]], "cocodetection (class in ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.CocoDetection"]], "cocoevaluator (class in ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator"]], "compose (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.Compose"]], "convertcocopolystomask (class in ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.ConvertCocoPolysToMask"]], "convertimagedtype (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ConvertImageDtype"]], "filterandremapcococategories (class in ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.FilterAndRemapCocoCategories"]], "fixedsizecrop (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.FixedSizeCrop"]], "groupedbatchsampler (class in ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio.GroupedBatchSampler"]], "metriclogger (class in ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.MetricLogger"]], "piltotensor (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.PILToTensor"]], "randomhorizontalflip (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomHorizontalFlip"]], "randomioucrop (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomIoUCrop"]], "randomphotometricdistort (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomPhotometricDistort"]], "randomshortestsize (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomShortestSize"]], "randomzoomout (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomZoomOut"]], "scalejitter (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ScaleJitter"]], "simplecopypaste (class in ts_semantic_feature_detector.segmentation_model.model.detection.transforms)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.SimpleCopyPaste"]], "smoothedvalue (class in ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue"]], "accumulate() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.accumulate"]], "add_meter() (ts_semantic_feature_detector.segmentation_model.model.detection.utils.metriclogger method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.MetricLogger.add_meter"]], "all_gather() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.all_gather"]], "avg (ts_semantic_feature_detector.segmentation_model.model.detection.utils.smoothedvalue property)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue.avg"]], "collate_fn() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.collate_fn"]], "compute_aspect_ratios() (in module ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio.compute_aspect_ratios"]], "convert_coco_poly_to_mask() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.convert_coco_poly_to_mask"]], "convert_to_coco_api() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.convert_to_coco_api"]], "convert_to_xywh() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.convert_to_xywh"]], "create_aspect_ratio_groups() (in module ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio.create_aspect_ratio_groups"]], "create_common_coco_eval() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.create_common_coco_eval"]], "evaluate() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.evaluate"]], "evaluate() (in module ts_semantic_feature_detector.segmentation_model.model.detection.engine)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.engine.evaluate"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.convertimagedtype method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ConvertImageDtype.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.fixedsizecrop method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.FixedSizeCrop.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.piltotensor method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.PILToTensor.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomhorizontalflip method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomHorizontalFlip.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomioucrop method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomIoUCrop.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomphotometricdistort method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomPhotometricDistort.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomshortestsize method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomShortestSize.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomzoomout method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomZoomOut.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.scalejitter method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ScaleJitter.forward"]], "forward() (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.simplecopypaste method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.SimpleCopyPaste.forward"]], "get_coco() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.get_coco"]], "get_coco_api_from_dataset() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.get_coco_api_from_dataset"]], "get_coco_kp() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils.get_coco_kp"]], "get_rank() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.get_rank"]], "get_world_size() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.get_world_size"]], "global_avg (ts_semantic_feature_detector.segmentation_model.model.detection.utils.smoothedvalue property)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue.global_avg"]], "init_distributed_mode() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.init_distributed_mode"]], "is_dist_avail_and_initialized() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.is_dist_avail_and_initialized"]], "is_main_process() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.is_main_process"]], "log_every() (ts_semantic_feature_detector.segmentation_model.model.detection.utils.metriclogger method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.MetricLogger.log_every"]], "max (ts_semantic_feature_detector.segmentation_model.model.detection.utils.smoothedvalue property)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue.max"]], "median (ts_semantic_feature_detector.segmentation_model.model.detection.utils.smoothedvalue property)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue.median"]], "merge() (in module ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.merge"]], "mkdir() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.mkdir"]], "prepare() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.prepare"]], "prepare_for_coco_detection() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.prepare_for_coco_detection"]], "prepare_for_coco_keypoint() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.prepare_for_coco_keypoint"]], "prepare_for_coco_segmentation() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.prepare_for_coco_segmentation"]], "reduce_dict() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.reduce_dict"]], "save_on_master() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.save_on_master"]], "setup_for_distributed() (in module ts_semantic_feature_detector.segmentation_model.model.detection.utils)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.setup_for_distributed"]], "summarize() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.summarize"]], "synchronize_between_processes() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.synchronize_between_processes"]], "synchronize_between_processes() (ts_semantic_feature_detector.segmentation_model.model.detection.utils.metriclogger method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.MetricLogger.synchronize_between_processes"]], "synchronize_between_processes() (ts_semantic_feature_detector.segmentation_model.model.detection.utils.smoothedvalue method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue.synchronize_between_processes"]], "train_one_epoch() (in module ts_semantic_feature_detector.segmentation_model.model.detection.engine)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.engine.train_one_epoch"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.convertimagedtype attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ConvertImageDtype.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.fixedsizecrop attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.FixedSizeCrop.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.piltotensor attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.PILToTensor.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomhorizontalflip attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomHorizontalFlip.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomioucrop attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomIoUCrop.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomphotometricdistort attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomPhotometricDistort.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomshortestsize attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomShortestSize.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.randomzoomout attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.RandomZoomOut.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.scalejitter attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.ScaleJitter.training"]], "training (ts_semantic_feature_detector.segmentation_model.model.detection.transforms.simplecopypaste attribute)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.transforms.SimpleCopyPaste.training"]], "ts_semantic_feature_detector.segmentation_model.model.detection": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection"]], "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval"]], "ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.coco_utils"]], "ts_semantic_feature_detector.segmentation_model.model.detection.engine": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.engine"]], "ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.group_by_aspect_ratio"]], "ts_semantic_feature_detector.segmentation_model.model.detection.transforms": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.transforms"]], "ts_semantic_feature_detector.segmentation_model.model.detection.utils": [[13, "module-ts_semantic_feature_detector.segmentation_model.model.detection.utils"]], "update() (ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.cocoevaluator method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.coco_eval.CocoEvaluator.update"]], "update() (ts_semantic_feature_detector.segmentation_model.model.detection.utils.metriclogger method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.MetricLogger.update"]], "update() (ts_semantic_feature_detector.segmentation_model.model.detection.utils.smoothedvalue method)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue.update"]], "value (ts_semantic_feature_detector.segmentation_model.model.detection.utils.smoothedvalue property)": [[13, "ts_semantic_feature_detector.segmentation_model.model.detection.utils.SmoothedValue.value"]], "terrasentiadataset (class in ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset"]], "_get_metrics() (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset method)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset._get_metrics"]], "image_size (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.image_size"]], "mask_imgs (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.mask_imgs"]], "mask_path (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.mask_path"]], "mean (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.mean"]], "num_imbs (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.num_imbs"]], "png_imgs (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.png_imgs"]], "png_path (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.png_path"]], "std_dev (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.std_dev"]], "transforms (ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.terrasentiadataset attribute)": [[14, "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset.TerraSentiaDataset.transforms"]], "ts_semantic_feature_detector.segmentation_model.ts_dataset": [[14, "module-ts_semantic_feature_detector.segmentation_model.ts_dataset"]], "ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset": [[14, "module-ts_semantic_feature_detector.segmentation_model.ts_dataset.ts_load_dataset"]], "metricsvisualizer (class in ts_semantic_feature_detector.segmentation_model.visualization.log)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer"]], "_load_train_log() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer._load_train_log"]], "_load_validation_log() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer._load_validation_log"]], "plot_learning_rate() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.plot_learning_rate"]], "plot_testing_metrics() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.plot_testing_metrics"]], "plot_testing_metrics_comparatively() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.plot_testing_metrics_comparatively"]], "plot_training_loss_and_lr() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.plot_training_loss_and_lr"]], "plot_training_loss_metrics_separated() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.plot_training_loss_metrics_separated"]], "plot_training_loss_metrics_together() (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer method)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.plot_training_loss_metrics_together"]], "train_metrics (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer attribute)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.train_metrics"]], "ts_semantic_feature_detector.segmentation_model.visualization": [[15, "module-ts_semantic_feature_detector.segmentation_model.visualization"]], "ts_semantic_feature_detector.segmentation_model.visualization.log": [[15, "module-ts_semantic_feature_detector.segmentation_model.visualization.log"]], "validation_metrics (ts_semantic_feature_detector.segmentation_model.visualization.log.metricsvisualizer attribute)": [[15, "ts_semantic_feature_detector.segmentation_model.visualization.log.MetricsVisualizer.validation_metrics"]], "visualizer2d (class in ts_semantic_feature_detector.visualization.visualizer_2d)": [[16, "ts_semantic_feature_detector.visualization.visualizer_2d.Visualizer2D"]], "visualizer3d (class in ts_semantic_feature_detector.visualization.visualizer_3d)": [[16, "ts_semantic_feature_detector.visualization.visualizer_3d.Visualizer3D"]], "get_color_from_cluster() (in module ts_semantic_feature_detector.visualization.colors)": [[16, "ts_semantic_feature_detector.visualization.colors.get_color_from_cluster"]], "plot_mask_group() (ts_semantic_feature_detector.visualization.visualizer_2d.visualizer2d method)": [[16, "ts_semantic_feature_detector.visualization.visualizer_2d.Visualizer2D.plot_mask_group"]], "show() (ts_semantic_feature_detector.visualization.visualizer_2d.visualizer2d method)": [[16, "ts_semantic_feature_detector.visualization.visualizer_2d.Visualizer2D.show"]], "show() (ts_semantic_feature_detector.visualization.visualizer_3d.visualizer3d method)": [[16, "ts_semantic_feature_detector.visualization.visualizer_3d.Visualizer3D.show"]], "ts_semantic_feature_detector.visualization": [[16, "module-ts_semantic_feature_detector.visualization"]], "ts_semantic_feature_detector.visualization.colors": [[16, "module-ts_semantic_feature_detector.visualization.colors"]], "ts_semantic_feature_detector.visualization.visualizer_2d": [[16, "module-ts_semantic_feature_detector.visualization.visualizer_2d"]], "ts_semantic_feature_detector.visualization.visualizer_3d": [[16, "module-ts_semantic_feature_detector.visualization.visualizer_3d"]]}})